{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/ilyasabdut/Projects/NodeJS/simple-movie-backend/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/ilyasabdut/Projects/NodeJS/simple-movie-backend\",\"filename\":\"/Users/ilyasabdut/Projects/NodeJS/simple-movie-backend/md-seed-config.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/ilyasabdut/Projects/NodeJS/simple-movie-backend\",\"plugins\":[],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/ilyasabdut/Projects/NodeJS/simple-movie-backend/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/ilyasabdut/Projects/NodeJS/simple-movie-backend",
      "filename": "/Users/ilyasabdut/Projects/NodeJS/simple-movie-backend/md-seed-config.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/ilyasabdut/Projects/NodeJS/simple-movie-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/ilyasabdut/Projects/NodeJS/simple-movie-backend/md-seed-config.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/ilyasabdut/Projects/NodeJS/simple-movie-backend/md-seed-config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/ilyasabdut/Projects/NodeJS/simple-movie-backend/",
        "sourceFileName": "md-seed-config.js"
      }
    },
    "ast": null,
    "code": "var mongoose = require('mongoose');\n\nMovie = require(\"./movie.model\");\nconst mongoURL = process.env.MONGO_URL || 'mongodb://localhost:27017/moviedb';\n/**\n * Seeders List\n * order is important\n * @type {Object}\n */\n\nconst seedersList = {\n  Movies\n};\n/**\n * Connect to mongodb implementation\n * @return {Promise}\n */\n\nconst connect = async () => await mongoose.connect(mongoURL, {\n  useNewUrlParser: true\n});\n/**\n * Drop/Clear the database implementation\n * @return {Promise}\n */\n\n\nconst dropdb = async () => mongoose.connection.db.dropDatabase();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1kLXNlZWQtY29uZmlnLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsIk1vdmllIiwibW9uZ29VUkwiLCJwcm9jZXNzIiwiZW52IiwiTU9OR09fVVJMIiwic2VlZGVyc0xpc3QiLCJNb3ZpZXMiLCJjb25uZWN0IiwidXNlTmV3VXJsUGFyc2VyIiwiZHJvcGRiIiwiY29ubmVjdGlvbiIsImRiIiwiZHJvcERhdGFiYXNlIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUVBQyxLQUFLLEdBQUdELE9BQU8sQ0FBQyxlQUFELENBQWY7QUFFQSxNQUFNRSxRQUFRLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxTQUFaLElBQXlCLG1DQUExQztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0MsTUFBTUMsV0FBVyxHQUFHO0FBQ25CQyxFQUFBQTtBQURtQixDQUFwQjtBQUlEO0FBQ0E7QUFDQTtBQUNBOztBQUNDLE1BQU1DLE9BQU8sR0FBRyxZQUNmLE1BQU1ULFFBQVEsQ0FBQ1MsT0FBVCxDQUFpQk4sUUFBakIsRUFBMkI7QUFBRU8sRUFBQUEsZUFBZSxFQUFFO0FBQW5CLENBQTNCLENBRFA7QUFFRDtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0MsTUFBTUMsTUFBTSxHQUFHLFlBQVlYLFFBQVEsQ0FBQ1ksVUFBVCxDQUFvQkMsRUFBcEIsQ0FBdUJDLFlBQXZCLEVBQTNCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9pbHlhc2FiZHV0L1Byb2plY3RzL05vZGVKUy9zaW1wbGUtbW92aWUtYmFja2VuZC8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xuXG5Nb3ZpZSA9IHJlcXVpcmUoXCIuL21vdmllLm1vZGVsXCIpO1xuXG5jb25zdCBtb25nb1VSTCA9IHByb2Nlc3MuZW52Lk1PTkdPX1VSTCB8fCAnbW9uZ29kYjovL2xvY2FsaG9zdDoyNzAxNy9tb3ZpZWRiJztcblxuLyoqXG4gKiBTZWVkZXJzIExpc3RcbiAqIG9yZGVyIGlzIGltcG9ydGFudFxuICogQHR5cGUge09iamVjdH1cbiAqL1xuIGNvbnN0IHNlZWRlcnNMaXN0ID0ge1xuICBNb3ZpZXMsXG5cbn07XG4vKipcbiAqIENvbm5lY3QgdG8gbW9uZ29kYiBpbXBsZW1lbnRhdGlvblxuICogQHJldHVybiB7UHJvbWlzZX1cbiAqL1xuIGNvbnN0IGNvbm5lY3QgPSBhc3luYyAoKSA9PlxuICBhd2FpdCBtb25nb29zZS5jb25uZWN0KG1vbmdvVVJMLCB7IHVzZU5ld1VybFBhcnNlcjogdHJ1ZSB9KTtcbi8qKlxuICogRHJvcC9DbGVhciB0aGUgZGF0YWJhc2UgaW1wbGVtZW50YXRpb25cbiAqIEByZXR1cm4ge1Byb21pc2V9XG4gKi9cbiBjb25zdCBkcm9wZGIgPSBhc3luYyAoKSA9PiBtb25nb29zZS5jb25uZWN0aW9uLmRiLmRyb3BEYXRhYmFzZSgpO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "md-seed-config.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Movie",
        "mongoURL",
        "process",
        "env",
        "MONGO_URL",
        "seedersList",
        "Movies",
        "connect",
        "useNewUrlParser",
        "dropdb",
        "connection",
        "db",
        "dropDatabase"
      ],
      "mappings": "AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEAC,KAAK,GAAGD,OAAO,CAAC,eAAD,CAAf;AAEA,MAAME,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,SAAZ,IAAyB,mCAA1C;AAEA;AACA;AACA;AACA;AACA;;AACC,MAAMC,WAAW,GAAG;AACnBC,EAAAA;AADmB,CAApB;AAID;AACA;AACA;AACA;;AACC,MAAMC,OAAO,GAAG,YACf,MAAMT,QAAQ,CAACS,OAAT,CAAiBN,QAAjB,EAA2B;AAAEO,EAAAA,eAAe,EAAE;AAAnB,CAA3B,CADP;AAED;AACA;AACA;AACA;;;AACC,MAAMC,MAAM,GAAG,YAAYX,QAAQ,CAACY,UAAT,CAAoBC,EAApB,CAAuBC,YAAvB,EAA3B",
      "sourceRoot": "/Users/ilyasabdut/Projects/NodeJS/simple-movie-backend/",
      "sourcesContent": [
        "var mongoose = require('mongoose');\n\nMovie = require(\"./movie.model\");\n\nconst mongoURL = process.env.MONGO_URL || 'mongodb://localhost:27017/moviedb';\n\n/**\n * Seeders List\n * order is important\n * @type {Object}\n */\n const seedersList = {\n  Movies,\n\n};\n/**\n * Connect to mongodb implementation\n * @return {Promise}\n */\n const connect = async () =>\n  await mongoose.connect(mongoURL, { useNewUrlParser: true });\n/**\n * Drop/Clear the database implementation\n * @return {Promise}\n */\n const dropdb = async () => mongoose.connection.db.dropDatabase();\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1615191005013
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/ilyasabdut/Projects/NodeJS/simple-movie-backend/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/ilyasabdut/Projects/NodeJS/simple-movie-backend\",\"filename\":\"/Users/ilyasabdut/Projects/NodeJS/simple-movie-backend/movie.model.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/ilyasabdut/Projects/NodeJS/simple-movie-backend\",\"plugins\":[],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/ilyasabdut/Projects/NodeJS/simple-movie-backend/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/ilyasabdut/Projects/NodeJS/simple-movie-backend",
      "filename": "/Users/ilyasabdut/Projects/NodeJS/simple-movie-backend/movie.model.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/ilyasabdut/Projects/NodeJS/simple-movie-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/ilyasabdut/Projects/NodeJS/simple-movie-backend/movie.model.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/ilyasabdut/Projects/NodeJS/simple-movie-backend/movie.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/ilyasabdut/Projects/NodeJS/simple-movie-backend/",
        "sourceFileName": "movie.model.js"
      }
    },
    "ast": null,
    "code": "// MovieModel.js\nvar mongoose = require('mongoose'); // Setup schema\n\n\nvar movieSchema = mongoose.Schema({\n  name: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  year: String,\n  genre: String\n}); // Export Contact model\n\nvar Movie = module.exports = mongoose.model('movie', movieSchema);\n\nmodule.exports.get = function (callback, limit) {\n  Movie.find(callback).limit(limit);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vdmllLm1vZGVsLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsIm1vdmllU2NoZW1hIiwiU2NoZW1hIiwibmFtZSIsInR5cGUiLCJTdHJpbmciLCJyZXF1aXJlZCIsInVuaXF1ZSIsInllYXIiLCJnZW5yZSIsIk1vdmllIiwibW9kdWxlIiwiZXhwb3J0cyIsIm1vZGVsIiwiZ2V0IiwiY2FsbGJhY2siLCJsaW1pdCIsImZpbmQiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsSUFBSUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF0QixDLENBQ0E7OztBQUNBLElBQUlDLFdBQVcsR0FBR0YsUUFBUSxDQUFDRyxNQUFULENBQWdCO0FBQzlCQyxFQUFBQSxJQUFJLEVBQUU7QUFDRkMsSUFBQUEsSUFBSSxFQUFFQyxNQURKO0FBRUZDLElBQUFBLFFBQVEsRUFBRSxJQUZSO0FBR0ZDLElBQUFBLE1BQU0sRUFBRTtBQUhOLEdBRHdCO0FBTTlCQyxFQUFBQSxJQUFJLEVBQUVILE1BTndCO0FBTzlCSSxFQUFBQSxLQUFLLEVBQUVKO0FBUHVCLENBQWhCLENBQWxCLEMsQ0FTQTs7QUFDQSxJQUFJSyxLQUFLLEdBQUdDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmIsUUFBUSxDQUFDYyxLQUFULENBQWUsT0FBZixFQUF3QlosV0FBeEIsQ0FBN0I7O0FBQ0FVLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlRSxHQUFmLEdBQXFCLFVBQVVDLFFBQVYsRUFBb0JDLEtBQXBCLEVBQTJCO0FBQzVDTixFQUFBQSxLQUFLLENBQUNPLElBQU4sQ0FBV0YsUUFBWCxFQUFxQkMsS0FBckIsQ0FBMkJBLEtBQTNCO0FBQ0gsQ0FGRCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvaWx5YXNhYmR1dC9Qcm9qZWN0cy9Ob2RlSlMvc2ltcGxlLW1vdmllLWJhY2tlbmQvIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTW92aWVNb2RlbC5qc1xudmFyIG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcbi8vIFNldHVwIHNjaGVtYVxudmFyIG1vdmllU2NoZW1hID0gbW9uZ29vc2UuU2NoZW1hKHtcbiAgICBuYW1lOiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICAgIHVuaXF1ZTogdHJ1ZVxuICAgIH0sXG4gICAgeWVhcjogU3RyaW5nLFxuICAgIGdlbnJlOiBTdHJpbmcsXG59KTtcbi8vIEV4cG9ydCBDb250YWN0IG1vZGVsXG52YXIgTW92aWUgPSBtb2R1bGUuZXhwb3J0cyA9IG1vbmdvb3NlLm1vZGVsKCdtb3ZpZScsIG1vdmllU2NoZW1hKTtcbm1vZHVsZS5leHBvcnRzLmdldCA9IGZ1bmN0aW9uIChjYWxsYmFjaywgbGltaXQpIHtcbiAgICBNb3ZpZS5maW5kKGNhbGxiYWNrKS5saW1pdChsaW1pdCk7XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "movie.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "movieSchema",
        "Schema",
        "name",
        "type",
        "String",
        "required",
        "unique",
        "year",
        "genre",
        "Movie",
        "module",
        "exports",
        "model",
        "get",
        "callback",
        "limit",
        "find"
      ],
      "mappings": "AAAA;AACA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB,C,CACA;;;AACA,IAAIC,WAAW,GAAGF,QAAQ,CAACG,MAAT,CAAgB;AAC9BC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAEC,MADJ;AAEFC,IAAAA,QAAQ,EAAE,IAFR;AAGFC,IAAAA,MAAM,EAAE;AAHN,GADwB;AAM9BC,EAAAA,IAAI,EAAEH,MANwB;AAO9BI,EAAAA,KAAK,EAAEJ;AAPuB,CAAhB,CAAlB,C,CASA;;AACA,IAAIK,KAAK,GAAGC,MAAM,CAACC,OAAP,GAAiBb,QAAQ,CAACc,KAAT,CAAe,OAAf,EAAwBZ,WAAxB,CAA7B;;AACAU,MAAM,CAACC,OAAP,CAAeE,GAAf,GAAqB,UAAUC,QAAV,EAAoBC,KAApB,EAA2B;AAC5CN,EAAAA,KAAK,CAACO,IAAN,CAAWF,QAAX,EAAqBC,KAArB,CAA2BA,KAA3B;AACH,CAFD",
      "sourceRoot": "/Users/ilyasabdut/Projects/NodeJS/simple-movie-backend/",
      "sourcesContent": [
        "// MovieModel.js\nvar mongoose = require('mongoose');\n// Setup schema\nvar movieSchema = mongoose.Schema({\n    name: {\n        type: String,\n        required: true,\n        unique: true\n    },\n    year: String,\n    genre: String,\n});\n// Export Contact model\nvar Movie = module.exports = mongoose.model('movie', movieSchema);\nmodule.exports.get = function (callback, limit) {\n    Movie.find(callback).limit(limit);\n}\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1615189497765
  }
}